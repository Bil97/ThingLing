@page "/user-account/reset-password/{UserId}/{Code}"
<h3>Reset password</h3>

<EditForm Model="@resetPassword" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />

    <div class="row">
        <label class="col-4">New password: </label>
        <div class="col-8">
            <InputText type="password" @bind-Value="resetPassword.NewPassword" class="form-control" placeholder="Your new password" />
            <ValidationMessage For="(()=>resetPassword.NewPassword)" />
        </div>
    </div>
    <div class="row">
        <label class="col-4">Confirm new password: </label>
        <div class="col-8">
            <InputText type="password" @bind-Value="resetPassword.ConfirmNewPassword" class="form-control" placeholder="Confirm your new password" />
            <ValidationMessage For="(()=>resetPassword.ConfirmNewPassword)" />
        </div>
    </div>
    <button type="submit" class="btn btn-primary m-5" disabled="@Submitting">Submit</button>
</EditForm>

@if (Error == true)
{
    <div class="alert alert-warning alert-dismissible">
        <button type="button" @onclick="(() => { Error = null; })" class="close">&times;</button>
        @Response
    </div>
}
@if (Error == false)
{
    <div class="alert alert-success alert-dismissible">
        <button class="close" @onclick="(() => { Error = null; })">&times;</button>
        @Response
    </div>
}

@code {
    [Parameter]
    public string UserId { get; set; }
    [Parameter]
    public string Code { get; set; }

    private ThingLing.Shared.Models.UserAccount.ResetPassword resetPassword = new ThingLing.Shared.Models.UserAccount.ResetPassword();
    private string Response { get; set; }
    private bool? Error { get; set; }
    private bool Submitting { get; set; }

    private async Task HandleValidSubmit()
    {
        try
        {
            Submitting = true;
            resetPassword.Id = UserId;
            resetPassword.Code = Code;
            var response = await _httpClient.PostAsJsonAsync<ThingLing.Shared.Models.UserAccount.ResetPassword>($"api/ApplicationUsers/reset-password", resetPassword);

            if (!response.IsSuccessStatusCode)
            {
                Error = true;
            }
            else
            {
                Error = false;
            }
            Submitting = false;
            Response = await response.Content.ReadAsStringAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
}
